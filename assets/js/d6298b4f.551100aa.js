"use strict";(self.webpackChunkrgbds_www_2=self.webpackChunkrgbds_www_2||[]).push([[2575],{3905:function(e,r,n){n.d(r,{Zo:function(){return d},kt:function(){return p}});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),l=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},d=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},b=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),b=l(n),p=a,m=b["".concat(c,".").concat(p)]||b[p]||u[p]||s;return n?t.createElement(m,o(o({ref:r},d),{},{components:n})):t.createElement(m,o({ref:r},d))}));function p(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=b;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}b.displayName="MDXCreateElement"},14478:function(e,r,n){n.r(r),n.d(r,{assets:function(){return d},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var t=n(83117),a=n(80102),s=(n(67294),n(3905)),o=["components"],i={},c="rgbds(7) \u2014 Rednex Game Boy Development System",l={unversionedId:"rgbds.7",id:"version-v0.5.0-rcCar/rgbds.7",title:"rgbds(7) \u2014 Rednex Game Boy Development System",description:"",source:"@site/versioned_docs/version-v0.5.0-rcCar/rgbds.7.md",sourceDirName:".",slug:"/rgbds.7",permalink:"/docs/v0.5.0-rcCar/rgbds.7",draft:!1,editUrl:"https://github.com/gbdev/rgbds/edit/master/man/rgbds.7",tags:[],version:"v0.5.0-rcCar",frontMatter:{},sidebar:"nav",previous:{title:"rgbgfx(1) \u2014 Game Boy graphics converter",permalink:"/docs/v0.5.0-rcCar/rgbgfx.1"},next:{title:"Submitting feedback",permalink:"/docs/v0.5.0-rcCar/feedback"}},d={},u=[{value:"EXAMPLES",id:"EXAMPLES",level:2,children:[]},{value:"SEE ALSO",id:"SEE_ALSO",level:2,children:[]},{value:"HISTORY",id:"HISTORY",level:2,children:[]}],b={toc:u};function p(e){var r=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,t.Z)({},b,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"rgbds7--rednex-game-boy-development-system"},"rgbds(7) \u2014 Rednex Game Boy Development System"),(0,s.kt)("div",{className:"manual-text",dangerouslySetInnerHTML:{__html:'<section class="Sh">\n<h2 class="Sh" id="EXAMPLES"><a class="permalink" href="#EXAMPLES">EXAMPLES</a></h2>\n<p class="Pp">To get a working ROM image from a single assembly source file:</p>\n<div class="Bd Pp Bd-indent Li">\n<pre>$ rgbasm -o bar.o foo.asm\n$ rgblink -o baz.gb bar.o\n$ rgbfix -v -p 0 baz.gb</pre>\n</div>\n</section>\n<section class="Sh">\n<h2 class="Sh" id="SEE_ALSO"><a class="permalink" href="#SEE_ALSO">SEE\n  ALSO</a></h2>\n<p class="Pp"><a class="Xr" href="./rgbasm.1">rgbasm(1)</a>,\n    <a class="Xr" href="./rgbfix.1">rgbfix(1)</a>,\n    <a class="Xr" href="./rgblink.1">rgblink(1)</a>,\n    <a class="Xr" href="./rgbds.5">rgbds(5)</a>,\n    <a class="Xr" href="./gbz80.7">gbz80(7)</a></p>\n</section>\n<section class="Sh">\n<h2 class="Sh" id="HISTORY"><a class="permalink" href="#HISTORY">HISTORY</a></h2>\n<ul class="Bl-item">\n  <li>1997, Carsten S&#x00F8;rensen (AKA SurfSmurf) writes ASMotor as a\n      general-purpose assembler/linker system for DOS/Win32.</li>\n  <li>1999, Justin Lloyd (AKA Otaku no Zoku) adapts ASMotor to read and produce\n      GBZ80 assembly/machine code, and releases this version as RGBDS.</li>\n  <li>2009, Vegard Nossum adapts the code to be more UNIX-like and releases this\n      version as rgbds-linux on GitHub.</li>\n  <li>2010, Anthony J. Bentley forks that repository. The fork becomes the\n      reference implementation of rgbds.</li>\n  <li>2017, Bentley\'s repository is moved to a neutral name. It is now\n      maintained by a number of contributors at\n      <a class="Lk" href="https://github.com/rednex/rgbds">https://github.com/rednex/rgbds</a>.</li>\n  <li>2018, codebase relicensed under the MIT license.</li>\n  <li>2020, repository is moved to the gbdev organisation, at\n      <a class="Lk" href="https://github.com/gbdev/rgbds">https://github.com/gbdev/rgbds</a>.\n      The <a class="Lk" href="https://rgbds.gbdev.io">https://rgbds.gbdev.io</a>\n      website serving documentation and downloads is created.</li>\n</ul>\n</section>\n'}}))}p.isMDXComponent=!0}}]);